# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nhnacademy-final-project-gateway-service:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/nhnacademy-final-project-gateway-service:${{ github.sha }}

    - name: Deploy to Cloud Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          SERVICE_NAME="gateway-service"

          COMPOSE_DIR="./projects/docker-compose"

          cd $COMPOSE_DIR

          RUNNING=$(docker-compose ps -q $SERVICE_NAME)

          if [ -n "$RUNNING" ]; then
            echo "$SERVICE_NAME is running. Restarting $SERVICE_NAME only."
            docker-compose stop $SERVICE_NAME
            docker-compose rm -f $SERVICE_NAME
            docker-compose up -d $SERVICE_NAME
          else
            echo "$SERVICE_NAME is not running. Performing full restart."
            docker-compose down
            docker-compose up -d
          fi

#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: maven
#
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#    - name : Run SonarQube
#      run : mvn sonar:sonar -Dsonar.projectKey=github-action -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}
#
#    - name: upload file
#      uses: appleboy/scp-action@master
#      with:
#        host: ${{ secrets.SSH_IP }}
#        username: ${{ secrets.SSH_ID }}
#        key: ${{ secrets.SSH_KEY }}
#        port: ${{ secrets.SSH_PORT }}
#        source: "target/*.jar"
#        target: "~/"
#        rm: false
#
#    - name: execute shell script
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.SSH_IP }}
#        username: ${{ secrets.SSH_ID }}
#        key: ${{ secrets.SSH_KEY }}
#        port: ${{ secrets.SSH_PORT }}
#        script_stop: true
#        script: "./startup.sh"